{"version":3,"sources":["Components/Navbar.js","Components/TextPart.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","tittle","type","id","onClick","toggleMode","htmlFor","TextPart","useState","text","setText","style","backgroundColor","color","heading","placeholder","value","onChange","event","target","rows","newText","split","map","word","index","charAt","toUpperCase","slice","toLowerCase","join","length","Alert","alert","class","role","lower","capitaliz","msg","defaultProps","App","setMode","setAlert","showAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f585e0d7.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n\r\n\r\n\r\n    return (\r\n        \r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                 {/*   <Link className=\"navbar-brand\" to=\"/\">{props.tittle}</Link> */}\r\n                    <a className=\"navbar-brand\" href=\"/\">{props.tittle}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                            {/*<Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>*/}\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                            {/*<Link className=\"nav-link\" to=\"/about\">About</Link>*/}\r\n                            </li>\r\n                        </ul>\r\n                        <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        \r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    tittle: PropTypes.string,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    tittle: 'Set tittle here'\r\n};","import React, { useState } from 'react'\r\n\r\nexport default function TextPart(props) {\r\n\r\n\r\n\r\n    \r\n\r\n    const handleTitleClick = () => {\r\n        let newText = text.split(' ').map(function (word, index) {\r\n            return word.charAt(0)\r\n                .toUpperCase() + word.slice(1)\r\n                    .toLowerCase();\r\n        })\r\n            .join(' ');\r\n        setText(newText)\r\n    }\r\n\r\n    const handleLowerClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n\r\n    const handleClearClick = () => {\r\n        setText('')\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <div className=\"main-page\"  >\r\n            <div className=\"container my-3\" style={{ backgroundColor: props.mode === 'light' ? 'white' : 'black', color: props.mode === 'light' ? 'black' : 'white' }}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"my-3\">\r\n                    <textarea className=\"form-control\" style={{ backgroundColor: props.mode === 'light' ? 'white' : 'black', color: props.mode === 'light' ? 'black' : 'white' }} placeholder=\"Enter Text Here...................\" value={text} onChange={handleOnChange} rows=\"8\" id=\"floatingTextarea\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-secondary\" onClick={handleClearClick}>Clear</button>\r\n                <button className=\"btn btn-warning mx-2\" onClick={handleTitleClick}>TitleCase</button>\r\n                <button className=\"btn btn-primary\" onClick={handleUpClick}>UpperCase</button>\r\n                <br />\r\n                <br />\r\n                <button className=\"btn btn-success\" onClick={handleLowerClick}>LowerCase</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{ backgroundColor: props.mode === 'light' ? 'white' : 'black', color: props.mode === 'light' ? 'black' : 'white' }}>\r\n                <h1 >Text Summary</h1>\r\n                <p > No. of words are {text.split(\" \").length} and No. of Letters are {text.length}</p>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitaliz = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitaliz(props.alert.type)}</strong>:{props.alert.msg}\r\n  \r\n</div>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextPart from './Components/TextPart';\nimport React, { useState } from 'react';\nimport Alert from './Components/Alert';\n//import About from './Components/About';\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000\n    );\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = 'black';\n      showAlert(\"Dark mode is enable\", \"success\");\n    } else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode is enable\", \"success\");\n    }\n  }\n  return (\n    <>\n    \n      <Navbar tittle=\"TextFormat\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n\n    {/* /users --> Component 1\n        /users/home --> Component 2 \n          <Route exact path=\"/about\">\n            <About />\n          </Route>*/}\n           \n            <TextPart heading=\"Enter the text to analyze below\" mode={mode}/>\n          \n      </div>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}